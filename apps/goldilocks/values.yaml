---
vpa:
  # vpa.enabled -- If true, the vpa will be installed as a sub-chart
  enabled: true
  updater:
    enabled: false

controller:
  # controller.flags -- A map of additional flags to pass to the controller
  flags: 
   --on-by-default: 

dashboard:
  # dashboard.basePath -- Path on which the dashboard is served. Defaults to `/`
  basePath: null
  # dashboard.enabled -- If true, the dashboard component will be installed
  enabled: true
  # dashboard.replicaCount -- Number of dashboard pods to run
  replicaCount: 1
  service:
    # dashboard.service.type -- The type of the dashboard service
    type: ClusterIP
    # dashboard.service.port -- The port to run the dashboard service on
    port: 80
    # dashboard.service.annotations -- Extra annotations for the dashboard service
    annotations: {}
  # dashboard.flags -- A map of additional flags to pass to the dashboard
  flags: {}
  # dashboard.logVerbosity -- Dashboard log verbosity. Can be set from 1-10 with 10 being extremely verbose
  logVerbosity: "5"
  # dashboard.excludeContainers -- Container names to exclude from displaying in the Goldilocks dashboard
  excludeContainers: "linkerd-proxy,istio-proxy"
  rbac:
    # dashboard.rbac.create -- If set to true, rbac resources will be created for the dashboard
    create: true
    # dashboard.rbac.enableArgoproj -- If set to true, the clusterrole will give access to argoproj.io resources
    enableArgoproj: true
  serviceAccount:
    # dashboard.serviceAccount.create -- If true, a service account will be created for the dashboard. If set to false, you must set `dashboard.serviceAccount.name`
    create: true
    # dashboard.serviceAccount.name -- The name of an existing service account to use for the controller. Combined with `dashboard.serviceAccount.create`
    name:

  deployment:
    # dashboard.deployment.annotations -- Extra annotations for the dashboard deployment
    annotations: {}
    # dashboard.deployment.additionalLabels -- Extra labels for the dashboard deployment
    additionalLabels: {}
    # dashboard.deployment.extraVolumeMounts -- Extra volume mounts for the dashboard container
    extraVolumeMounts: []
    # dashboard.deployment.extraVolumes -- Extra volumes for the dashboard pod
    extraVolumes: []

    # dashboard.deployment.podAnnotations -- Extra annotations for the dashboard pod
    podAnnotations: {}

  ingress:
    # dashboard.ingress.enabled -- Enables an ingress object for the dashboard.
    enabled: true

    # dashboard.ingress.ingressClassName -- From Kubernetes 1.18+ this field is supported in case your ingress controller supports it. When set, you do not need to add the ingress class as annotation.
    ingressClassName:
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: goldi.sva.lab
        paths:
          - path: /
            type: ImplementationSpecific


